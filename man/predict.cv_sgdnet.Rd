% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/predict.cv_sgdnet.R
\name{predict.cv_sgdnet}
\alias{predict.cv_sgdnet}
\title{Make Predcitions Based on Fit From \code{\link[=cv_sgdnet]{cv_sgdnet()}}}
\usage{
\method{predict}{cv_sgdnet}(object, newx, s = c("lambda_1se",
  "lambda_min"), ...)
}
\arguments{
\item{object}{a fit from \code{\link[=cv_sgdnet]{cv_sgdnet()}}}

\item{newx}{new data to base predictions on}

\item{s}{\code{'lambda.1se'} chooses predictions based on the
model fit to the largest \eqn{\lambda}{lambda} with an error
at most one standard deviation away from the fit with the least
error; predictions are based on the latter fit if \code{'lambda.min'} is
chosen}

\item{...}{arguments passed on to \code{\link[=predict.sgdnet]{predict.sgdnet()}}}
}
\value{
Predictions for \code{object} given data in \code{newx}.
}
\description{
This function is mostly for convenience, since it makes it easy to
take an object from a call to \code{\link[=cv_sgdnet]{cv_sgdnet()}} and make predictions based
on a \eqn{\lambda}{lambda} chosen from cross-validation results.
}
\examples{
set.seed(1)
train_ind <- sample(150, 100)
fit <- cv_sgdnet(iris[train_ind, 1:4],
                 iris[train_ind, 5],
                 family = "multinomial",
                 nfolds = 5)
predict(fit, iris[-train_ind, 1:4], s = "lambda_min", type = "class")
}
