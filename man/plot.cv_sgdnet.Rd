% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot.cv_sgdnet.R
\name{plot.cv_sgdnet}
\alias{plot.cv_sgdnet}
\title{Plot Results from Cross-Validation}
\usage{
\method{plot}{cv_sgdnet}(x, sign.lambda = 1, plot_min = TRUE,
  plot_1se = TRUE, ci_alpha = 0.2, ci_border = FALSE,
  ci_col = lattice::trellis.par.get("superpose.line")$col, ...)
}
\arguments{
\item{x}{an object of class \code{'cv_sgdnet'}}

\item{sign.lambda}{the sign of \eqn{\lambda}{lambda}}

\item{plot_min}{whether to mark the location of the lambda corresponding
to the best prediction score}

\item{plot_1se}{whether to mark the location of the largest lambda
within one standard deviation from the location corresponding to \code{plot_min}}

\item{ci_alpha}{alpha (opacity) for fill in confidence limits}

\item{ci_border}{color (or flag to turn off and on) the border of the
confidence limits}

\item{ci_col}{color for border of confidence limits}

\item{...}{other arguments that are passed on to \code{\link[lattice:xyplot]{lattice::xyplot()}}}
}
\value{
An object of class \code{'trellis'} is returned and, if used
interactively, will most likely have its print function
\code{\link[lattice:print.trellis]{lattice::print.trellis()}}) invoked, which draws the plot on the
current display device.
}
\description{
Plot Results from Cross-Validation
}
\examples{
cv <- cv_sgdnet(heart$x,
                heart$y,
                family = "binomial",
                alpha = c(0, 0.8, 0.9))
plot(cv, ci_alpha = 0.3, plot_1se = FALSE)
}
\seealso{
\link{cv_sgdnet}, \code{\link[lattice:xyplot]{lattice::xyplot()}}, \code{\link[lattice:panel.xyplot]{lattice::panel.xyplot()}}
}
