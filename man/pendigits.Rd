% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/data.R
\docType{data}
\name{pendigits}
\alias{pendigits}
\title{Pen-Based Recognition of Handwritten Digits Data Set}
\format{A \code{list} containing two lists, \code{train} and \code{test} with
7,494 and 3,498 observations respectively, each containing
\describe{
\item{x}{a feature matrix of class \code{'Matrix::dgCMatrix'} with
16 features}
\item{y}{a factor with 10 levels, one for each digit}
}}
\source{
\url{https://www.csie.ntu.edu.tw/~cjlin/libsvmtools/datasets/multiclass.html}

\url{https://archive.ics.uci.edu/ml/datasets/Pen-Based+Recognition+of+Handwritten+Digits}

F. Alimoglu (1996) Combining Multiple Classifiers for Pen-Based
Handwritten Digit Recognition, MSc Thesis, Institute of Graduate Studies
in Science and Engineering, Bogazici University.

F. Alimoglu, E. Alpaydin, "Methods of Combining Multiple Classifiers
Based on Different Representations for Pen-based Handwriting Recognition,"
Proceedings of the Fifth Turkish Artificial Intelligence and Artificial
Neural Networks Symposium (TAINN 96), June 1996, Istanbul, Turkey.
}
\usage{
pendigits
}
\description{
A data set of 250 samples of handwritten digits from 44 writers. Thirty of
these make up the training set.
}
\details{
From description on UCI (with a few formatting changes):

"In our study, we use only (x, y) coordinate information. The stylus
pressure level values are ignored. First we apply normalization to make our
representation invariant to translations and scale distortions. The raw
data that we capture from the tablet consist of integer values between 0 and
500 (tablet input box resolution). The new coordinates are such that the
coordinate which has the maximum range varies between 0 and 100. Usually x
stays in this range, since most characters are taller than they are wide.

In order to train and test our classifiers, we need to represent digits as
constant length feature vectors. A commonly used technique leading to good
results is resampling the \eqn{(x_t, y_t)} points. Temporal
resampling (points
regularly spaced in time) or spatial resampling (points regularly spaced in
arc length) can be used here. Raw point data are already regularly spaced in
time but the distance between them is variable. Previous research showed
that spatial resampling to obtain a constant number of regularly spaced
points on the trajectory yields much better performance, because it provides
a better alignment between points. Our resampling algorithm uses simple
linear interpolation between pairs of points. The resampled digits are
represented as a sequence of T points
\eqn{(x_t, y_t)_{t=1}^\mathsf{T}}{(x_t, y_t)_{t=1}^T}, regularly
spaced in arc length, as opposed to the input sequence, which is regularly
spaced in time.

So, the input vector size is 2*T, two times the number of points resampled.
We considered spatial resampling to T = 8, 12, 16 points in our experiments
and
found that T = 8 gave the best trade-off between accuracy and complexity."
}
\keyword{datasets}
