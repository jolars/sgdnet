% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cv_sgdnet.R
\name{cv_sgdnet}
\alias{cv_sgdnet}
\title{\emph{k}-fold Cross Validation for \strong{sgdnet}}
\usage{
cv_sgdnet(x, y, alpha = 1, lambda = NULL, nfolds = 10,
  foldid = NULL, type.measure = c("deviance", "mse", "mae", "class",
  "auc"), ...)
}
\arguments{
\item{x}{input matrix}

\item{y}{response variable}

\item{alpha}{elastic net mixing parameter; vectors of values are allowed
(unlike in \code{\link[=sgdnet]{sgdnet()}})}

\item{lambda}{regularization strength}

\item{nfolds}{number of folds (k)}

\item{foldid}{a vector of fold identities}

\item{type.measure}{the type of error}

\item{...}{arguments passed on to \code{\link[=sgdnet]{sgdnet()}}}
}
\value{
An object of class \code{'cv_sgdnet'} with the following items:
\tabular{ll}{
\code{alpha}      \tab the elastic net mixing parameter used\cr
\code{lambda}     \tab a list of lambda values of the same length as \code{alpha}\cr
\code{cv_summary} \tab a \code{data.frame} summarizing the prediction error across
the regularization path with columns \code{alpha}, \code{lambda},
\code{mean}, \code{sd}, \code{ci_lo}, \code{ci_up}\cr
\code{cv_raw}     \tab the raw cross-validation scores as a list of the
same length as \code{alpha}, each item a \code{matrix} with
the error for each fold as a row and each value of
\code{lambda} in columns.\cr
\code{name}       \tab the type of prediction error used\cr
\code{fit}        \tab a fit from \code{\link[=sgdnet]{sgdnet()}} to the full data set based on the
\code{alpha} with the best cross-validation score\cr
\code{alpha_min}  \tab the \code{alpha} corresponding to the fit with the best
cross-validation performance\cr
\code{lambda_min} \tab the \code{lambda} corresponding to the fit with the best
cross-validation performance\cr
\code{lambda_1se} \tab the largest \code{lambda} with a cross-validation performance
within one standard deviation of the one
coresponding to \code{lambda_min}
}
}
\description{
\emph{k}-fold Cross Validation for \strong{sgdnet}
}
\examples{
set.seed(1)
n <- nrow(heart$x)
train_ind <- sample(n, floor(0.8*n))
cv_fit <- cv_sgdnet(heart$x[train_ind, ],
                    heart$y[train_ind],
                    family = "binomial",
                    nfolds = 7,
                    alpha = c(0, 1))
plot(cv_fit)
predict(cv_fit, heart$x[-train_ind, ], s = "lambda_min")
}
\seealso{
\code{\link[=sgdnet]{sgdnet()}}, \code{\link[=predict.cv_sgdnet]{predict.cv_sgdnet()}}, \code{\link[=plot.cv_sgdnet]{plot.cv_sgdnet()}}
}
